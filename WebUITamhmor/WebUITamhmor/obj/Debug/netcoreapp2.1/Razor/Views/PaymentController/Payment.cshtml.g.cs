#pragma checksum "C:\Users\acer\OneDrive\เดสก์ท็อป\Project\Tamhmor1\WebUITamhmor\WebUITamhmor\Views\PaymentController\Payment.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "95d6aa0551c7cbb3e8ef5151443a0c4ae7ca3fca"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_PaymentController_Payment), @"mvc.1.0.view", @"/Views/PaymentController/Payment.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/PaymentController/Payment.cshtml", typeof(AspNetCore.Views_PaymentController_Payment))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\acer\OneDrive\เดสก์ท็อป\Project\Tamhmor1\WebUITamhmor\WebUITamhmor\Views\_ViewImports.cshtml"
using WebUITamhmor;

#line default
#line hidden
#line 2 "C:\Users\acer\OneDrive\เดสก์ท็อป\Project\Tamhmor1\WebUITamhmor\WebUITamhmor\Views\_ViewImports.cshtml"
using WebUITamhmor.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"95d6aa0551c7cbb3e8ef5151443a0c4ae7ca3fca", @"/Views/PaymentController/Payment.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ba44f7ea8dcca69602519ab9f229c2683e108b7a", @"/Views/_ViewImports.cshtml")]
    public class Views_PaymentController_Payment : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<WebUITamhmor.Models.DoctorModel>>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\acer\OneDrive\เดสก์ท็อป\Project\Tamhmor1\WebUITamhmor\WebUITamhmor\Views\PaymentController\Payment.cshtml"
  
    ViewData["Title"] = "Payment";

#line default
#line hidden
            BeginContext(96, 6, true);
            WriteLiteral("\r\n\r\n\r\n");
            EndContext();
            BeginContext(102, 500, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01df9bd811bd4818b6dd27ccc0001617", async() => {
                BeginContext(108, 149, true);
                WriteLiteral("\r\n\r\n\r\n    <div class=\"table-bordered \" style=\"margin:50px; padding:20px;\">\r\n        <div style=\"text-align: center;\">\r\n            <h1>Payment</h1>\r\n");
                EndContext();
#line 14 "C:\Users\acer\OneDrive\เดสก์ท็อป\Project\Tamhmor1\WebUITamhmor\WebUITamhmor\Views\PaymentController\Payment.cshtml"
             foreach (var item in Model)
            {

#line default
#line hidden
                BeginContext(314, 85, true);
                WriteLiteral("                <button type=\"button\" class=\"btn\" id=\"price-btn\" style=\"margin:20px;\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 399, "\"", 449, 1);
#line 16 "C:\Users\acer\OneDrive\เดสก์ท็อป\Project\Tamhmor1\WebUITamhmor\WebUITamhmor\Views\PaymentController\Payment.cshtml"
WriteAttributeValue("", 407, Html.DisplayFor(ModelItem => item.Dprice), 407, 42, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(450, 2, true);
                WriteLiteral("> ");
                EndContext();
                BeginContext(453, 41, false);
#line 16 "C:\Users\acer\OneDrive\เดสก์ท็อป\Project\Tamhmor1\WebUITamhmor\WebUITamhmor\Views\PaymentController\Payment.cshtml"
                                                                                                                                     Write(Html.DisplayFor(ModelItem => item.Dprice));

#line default
#line hidden
                EndContext();
                BeginContext(494, 16, true);
                WriteLiteral(" Bath</button>\r\n");
                EndContext();
#line 17 "C:\Users\acer\OneDrive\เดสก์ท็อป\Project\Tamhmor1\WebUITamhmor\WebUITamhmor\Views\PaymentController\Payment.cshtml"
            }

#line default
#line hidden
                BeginContext(525, 70, true);
                WriteLiteral("            <div id=\"container\"></div>\r\n        </div>\r\n    </div>\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(602, 4481, true);
            WriteLiteral(@"



<script async
        src=""https://pay.google.com/gp/p/js/pay.js""
        onload=""onGooglePayLoaded()""></script>

<div id=""container""></div>

<script>

    const baseRequest = {
        apiVersion: 2,
        apiVersionMinor: 0
    };


    const allowedCardNetworks = [""AMEX"", ""DISCOVER"", ""INTERAC"", ""JCB"", ""MASTERCARD"", ""VISA""];


    const allowedCardAuthMethods = [""PAN_ONLY"", ""CRYPTOGRAM_3DS""];


    const tokenizationSpecification = {
        type: 'PAYMENT_GATEWAY',
        parameters: {
            'gateway': 'example',
            'gatewayMerchantId': 'exampleGatewayMerchantId'
        }
    };


    const baseCardPaymentMethod = {
        type: 'CARD',
        parameters: {
            allowedAuthMethods: allowedCardAuthMethods,
            allowedCardNetworks: allowedCardNetworks
        }
    };


    const cardPaymentMethod = Object.assign(
        {},
        baseCardPaymentMethod,
        {
            tokenizationSpecification: tokenizationSpecifi");
            WriteLiteral(@"cation
        }
    );


    let paymentsClient = null;


    function getGoogleIsReadyToPayRequest() {
        return Object.assign(
            {},
            baseRequest,
            {
                allowedPaymentMethods: [baseCardPaymentMethod]
            }
        );
    }


    function getGooglePaymentDataRequest() {
        const paymentDataRequest = Object.assign({}, baseRequest);
        paymentDataRequest.allowedPaymentMethods = [cardPaymentMethod];
        paymentDataRequest.transactionInfo = getGoogleTransactionInfo();
        paymentDataRequest.merchantInfo = {

            merchantName: 'Example Merchant'
        };
        return paymentDataRequest;
    }


    function getGooglePaymentsClient() {
        if (paymentsClient === null) {
            paymentsClient = new google.payments.api.PaymentsClient({ environment: 'TEST' });
        }
        return paymentsClient;
    }


    function onGooglePayLoaded() {
        const paymentsClient = getGoogl");
            WriteLiteral(@"ePaymentsClient();
        paymentsClient.isReadyToPay(getGoogleIsReadyToPayRequest())
            .then(function (response) {
                if (response.result) {
                    addGooglePayButton();

                }
            })
            .catch(function (err) {
                // show error in developer console for debugging
                //console.error(err);
            });
    }


    function addGooglePayButton() {
        const paymentsClient = getGooglePaymentsClient();
        const button =
            paymentsClient.createButton({ onClick: onGooglePaymentButtonClicked });
        document.getElementById('container').appendChild(button);
        window.location.href = ""/Chat/Chatroom"";

        //window.location.href = ""/Chat/Chatroom"";
    }


    function getGoogleTransactionInfo() {
        var price = $('#price-btn').val();
        return {
            countryCode: 'TH',
            currencyCode: 'THB',
            totalPriceStatus: 'FINAL',
      ");
            WriteLiteral(@"      // set to cart total
            totalPrice: price
        };
    }

    function prefetchGooglePaymentData() {
        const paymentDataRequest = getGooglePaymentDataRequest();
        // transactionInfo must be set but does not affect cache
        paymentDataRequest.transactionInfo = {
            totalPriceStatus: 'NOT_CURRENTLY_KNOWN',
            currencyCode: 'THB'
        };
        const paymentsClient = getGooglePaymentsClient();
        paymentsClient.prefetchPaymentData(paymentDataRequest);
    }


    function onGooglePaymentButtonClicked() {
        const paymentDataRequest = getGooglePaymentDataRequest();
        paymentDataRequest.transactionInfo = getGoogleTransactionInfo();

        const paymentsClient = getGooglePaymentsClient();
        paymentsClient.loadPaymentData(paymentDataRequest)
            .then(function (paymentData) {
                // handle the response
                processPayment(paymentData);
            })
            .catch(function (e");
            WriteLiteral(@"rr) {
                // show error in developer console for debugging
                console.error(err);
            });
    }

    function processPayment(paymentData) {
        // show returned data in developer console for debugging
        console.log(paymentData);

        paymentToken = paymentData.paymentMethodData.tokenizationData.token;
    }</script>




");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<WebUITamhmor.Models.DoctorModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
